/sys/
=====

Kernel.

Structure
---------

The way objects and libraries are defined by the linker script located at
machine/MACHINE/sys.ld.

All architecture-specific and machine-specific header files must be in
arch/ARCH/include/arch/ and machine/MACHINE/include/machine/ respectively, and
they must have no implementation. Each architecture's and each machine's header
files must define a consistent API by providing a common set of identifiers.

The file machine/MACHINE/arch must be a symlink the the directory of the
architecture of the machine.

The following is a list of targets which describes where they are defined and
how they depend on each other.

* libsys.a (defined in lib/, uses objects from arch/ARCH/lib/)

The target libsys.a is a static library which implements the header files in
include/.

* sys.o (defined in src/, uses source file arch/ARCH/entry.s)

The target sys.o is a relocatable object which contains the primary
implementation of the kernel. It depends on libarch.a and libsys.a. It defines
the kmain symbol, which should be called by the main architecture-dependent
entry point defined in arch/ARCH/entry.s, and the interrupt symbol, which gets
a byte as argument and should be set by the main architecture-dependent entry
point as the interrupt handler.

* sys.bin (defined in /)

The main target is sys.bin, which links sys.o with all its dependencies.
